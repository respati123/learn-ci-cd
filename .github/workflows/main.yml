name: main


on: 
  push:
    branches: 
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4.2.2

      - name: Setup Go
        uses: actions/setup-go@v5.1.0
        with:
          go-version: 1.21.10

      - name: Go Build
        run: |
          go build -o app_name

      - name: Upload binary build
        uses: actions/upload-artifact@v4.4.3
        with:
          name: app_binary
          path: app_name

          
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:

      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: app_binary

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}
      
      
      - name: Deploy to VPS
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          port: 22
          key: ${{ secrets.SSH_KEY }}
          username: ${{ secrets.SSH_USER }}
          source: app_name
          target: /root/app/


      - name: Run applications golang
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          port: 22
          key: ${{ secrets.SSH_KEY }}
          username: ${{ secrets.SSH_USER }}
          script: |

            # pkill -f app_name || true
            cd /root/app/
            chmod +x ./app_name
            nohup ./app_name > app.log 2>&1 &
            echo "Aplikasi berhasil dijalankan di background."
